{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport PostCard from '../containers/PostCard';\n\nvar User = function User() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c\n    });\n  }));\n};\n\nUser.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = _parseInt(context.query.id, 10);\n          console.log('user getInitialProps', id);\n          context.store.dispatch({\n            type: LOAD_USER_REQUEST,\n            data: id\n          });\n          context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: id\n          });\n          return _context.abrupt(\"return\", {\n            id: id\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/woogler/dev/react-nodebird/front/pages/user.js"],"names":["React","useSelector","Avatar","Card","LOAD_USER_POSTS_REQUEST","LOAD_USER_REQUEST","PostCard","User","state","post","mainPosts","user","userInfo","Posts","Followings","Followers","nickname","map","c","id","getInitialProps","context","query","console","log","store","dispatch","type","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACKN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADhB;AAAA,MACTC,SADS,gBACTA,SADS;;AAAA,sBAEIT,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAFf;AAAA,MAETC,QAFS,iBAETA,QAFS;;AAIjB,SACE,mBACGA,QAAQ,GAEL,MAAC,IAAD;AACE,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEE,iBAFF,EAGGA,QAAQ,CAACC,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGD,QAAQ,CAACE,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGF,QAAQ,CAACG,SAHZ,CAXO;AADX,KAmBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD,QAASH,QAAQ,CAACI,QAAT,CAAkB,CAAlB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEJ,QAAQ,CAACI;AAFlB,IAnBF,CAFK,GA2BL,IA5BN,EA6BGN,SAAS,CAACO,GAAV,CAAc,UAAAC,CAAC;AAAA,WACd,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAjB;AAAqB,MAAA,IAAI,EAAED;AAA3B,MADc;AAAA,GAAf,CA7BH,CADF;AAmCD,CAvCD;;AAyCAX,IAAI,CAACa,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfF,UAAAA,EADe,GACV,UAASE,OAAO,CAACC,KAAR,CAAcH,EAAvB,EAA2B,EAA3B,CADU;AAErBI,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,EAApC;AACAE,UAAAA,OAAO,CAACI,KAAR,CAAcC,QAAd,CAAuB;AACrBC,YAAAA,IAAI,EAAEtB,iBADe;AAErBuB,YAAAA,IAAI,EAAET;AAFe,WAAvB;AAIAE,UAAAA,OAAO,CAACI,KAAR,CAAcC,QAAd,CAAuB;AACrBC,YAAAA,IAAI,EAAEvB,uBADe;AAErBwB,YAAAA,IAAI,EAAET;AAFe,WAAvB;AAPqB,2CAWd;AAAEA,YAAAA,EAAE,EAAFA;AAAF,WAXc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAcA,eAAeZ,IAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport PostCard from '../containers/PostCard';\n\nconst User = () => {\n  const { mainPosts } = useSelector(state => state.post);\n  const { userInfo } = useSelector(state => state.user);\n\n  return (\n    <div>\n      {userInfo\n        ? (\n          <Card\n            actions={[\n              <div key=\"twit\">\n                짹짹\n                <br />\n                {userInfo.Posts}\n              </div>,\n              <div key=\"following\">\n                팔로잉\n                <br />\n                {userInfo.Followings}\n              </div>,\n              <div key=\"follower\">\n                팔로워\n                <br />\n                {userInfo.Followers}\n              </div>,\n            ]}\n          >\n            <Card.Meta\n              avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n              title={userInfo.nickname}\n            />\n          </Card>\n        )\n        : null}\n      {mainPosts.map(c => (\n        <PostCard key={c.id} post={c} />\n      ))}\n    </div>\n  );\n};\n\nUser.getInitialProps = async (context) => {\n  const id = parseInt(context.query.id, 10);\n  console.log('user getInitialProps', id);\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: id,\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: id,\n  });\n  return { id };\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}