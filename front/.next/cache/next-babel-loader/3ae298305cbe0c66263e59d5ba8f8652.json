{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar MyError = function MyError(_ref) {\n  var statusCode = _ref.statusCode;\n  return __jsx(\"div\", null, __jsx(\"h1\", null, statusCode, \" \\uC5D0\\uB7EC \\uBC1C\\uC0DD\"));\n};\n\nMyError.defaultProps = {\n  statusCode: 400\n};\n\nMyError.getInitialProps = function _callee(context) {\n  var statusCode;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          statusCode = context.res ? context.res.statusCode : context.err ? context.err.statusCode : null;\n          return _context.abrupt(\"return\", {\n            statusCode: statusCode\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MyError;","map":{"version":3,"sources":["/Users/woogler/dev/react-nodebird/front/pages/_error.js"],"names":["React","MyError","statusCode","defaultProps","getInitialProps","context","res","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAClC,SACE,mBACE,kBAAKA,UAAL,+BADF,CADF;AAKD,CAND;;AAYAD,OAAO,CAACE,YAAR,GAAuB;AACrBD,EAAAA,UAAU,EAAE;AADS,CAAvB;;AAIAD,OAAO,CAACG,eAAR,GAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBH,UAAAA,UADkB,GACLG,OAAO,CAACC,GAAR,GAAcD,OAAO,CAACC,GAAR,CAAYJ,UAA1B,GAAuCG,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYL,UAA1B,GAAuC,IADzE;AAAA,2CAEjB;AAAEA,YAAAA,UAAU,EAAVA;AAAF,WAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAKA,eAAeD,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MyError = ({ statusCode }) => {\n  return (\n    <div>\n      <h1>{statusCode} 에러 발생</h1>\n    </div>\n  );\n};\n\nMyError.propTypes = {\n  statusCode: PropTypes.number,\n};\n\nMyError.defaultProps = {\n  statusCode: 400,\n};\n\nMyError.getInitialProps = async (context) => {\n  const statusCode = context.res ? context.res.statusCode : context.err ? context.err.statusCode : null;\n  return { statusCode };\n};\n\nexport default MyError;\n"]},"metadata":{},"sourceType":"module"}