{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, memo } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FOLLOW_USER_REQUEST, UNFOLLOW_USER_REQUEST } from '../reducers/user';\nconst FollowButton = memo(({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const onFollow = useCallback(userId => () => {\n    dispatch({\n      type: FOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  return __jsx(React.Fragment, null, !me || post.User.id === me.id ? null : me.Followings && me.Followings.find(v => v.id === post.User.id) ? __jsx(Button, {\n    onClick: onUnfollow(post.User.id)\n  }, \"\\uC5B8\\uD314\\uB85C\\uC6B0\") : __jsx(Button, {\n    onClick: onFollow(post.User.id)\n  }, \"\\uD314\\uB85C\\uC6B0\"));\n});\nexport default FollowButton;","map":{"version":3,"sources":["/Users/woogler/dev/react-nodebird/front/components/FollowButton.js"],"names":["React","useCallback","memo","Button","useDispatch","useSelector","FOLLOW_USER_REQUEST","UNFOLLOW_USER_REQUEST","FollowButton","post","dispatch","me","state","user","onFollow","userId","type","data","onUnfollow","User","id","Followings","find","v"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,IAA5B,QAAuC,OAAvC;AACA,SAAQC,MAAR,QAAqB,MAArB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,EAA8BC,qBAA9B,QAA2D,kBAA3D;AAEA,MAAMC,YAAY,GAAGN,IAAI,CAAC,CAAC;AAACO,EAAAA;AAAD,CAAD,KAAY;AACpC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAACO,IAAAA;AAAD,MAAON,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACC,IAAd,CAAxB;AAEA,QAAMC,QAAQ,GAAGb,WAAW,CAACc,MAAM,IAAI,MAAM;AAC3CL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEV,mBADC;AAEPW,MAAAA,IAAI,EAAEF;AAFC,KAAD,CAAR;AAID,GAL2B,EAKzB,EALyB,CAA5B;AAOA,QAAMG,UAAU,GAAGjB,WAAW,CAACc,MAAM,IAAI,MAAM;AAC7CL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAET,qBADC;AAEPU,MAAAA,IAAI,EAAEF;AAFC,KAAD,CAAR;AAID,GAL6B,EAK3B,EAL2B,CAA9B;AAOA,SACE,4BAEE,CAACJ,EAAD,IAAOF,IAAI,CAACU,IAAL,CAAUC,EAAV,KAAiBT,EAAE,CAACS,EAA3B,GACI,IADJ,GAEIT,EAAE,CAACU,UAAH,IAAiBV,EAAE,CAACU,UAAH,CAAcC,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASX,IAAI,CAACU,IAAL,CAAUC,EAA3C,CAAjB,GACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,UAAU,CAACT,IAAI,CAACU,IAAL,CAAUC,EAAX;AAA3B,gCADF,GAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,QAAQ,CAACL,IAAI,CAACU,IAAL,CAAUC,EAAX;AAAzB,0BANR,CADF;AAWD,CA7BwB,CAAzB;AAmCA,eAAeZ,YAAf","sourcesContent":["import React, {useCallback, memo} from 'react';\nimport {Button} from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FOLLOW_USER_REQUEST, UNFOLLOW_USER_REQUEST } from '../reducers/user';\n\nconst FollowButton = memo(({post}) => {\n  const dispatch = useDispatch();\n  const {me} = useSelector(state=>state.user);\n  \n  const onFollow = useCallback(userId => () => {\n    dispatch({\n      type: FOLLOW_USER_REQUEST,\n      data: userId,\n    });\n  }, []);\n\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId,\n    });\n  }, []);\n\n  return (\n    <>\n      {\n      !me || post.User.id === me.id\n        ? null\n        : me.Followings && me.Followings.find(v => v.id === post.User.id)\n          ? <Button onClick={onUnfollow(post.User.id)}>언팔로우</Button>\n          : <Button onClick={onFollow(post.User.id)}>팔로우</Button>\n      }\n    </>\n  );\n});\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired,\n}\n\nexport default FollowButton;\n"]},"metadata":{},"sourceType":"module"}