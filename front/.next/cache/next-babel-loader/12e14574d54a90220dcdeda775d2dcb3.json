{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport axios from 'axios';\nimport Helmet from 'react-helmet';\nimport App, { Container } from 'next/app';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user'; // class NodeBird extends App {\n//   static getInitialProps(context) {\n//\n//   }\n//   render() {\n//\n//   }\n// }\n\nconst NodeBird = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(Container, null, __jsx(Provider, {\n    store: store\n  }, __jsx(Helmet, {\n    title: \"NodeBird\",\n    htmlAttributes: {\n      lang: 'ko'\n    },\n    meta: [{\n      charset: 'UTF-8'\n    }, {\n      name: 'viewport',\n      content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover'\n    }, {\n      'http-equiv': 'X-UA-Compatible',\n      content: 'IE=edge'\n    }, {\n      name: 'description',\n      content: '제로초의 NodeBird SNS'\n    }, {\n      name: 'og:title',\n      content: 'NodeBird'\n    }, {\n      name: 'og:description',\n      content: '제로초의 NodeBird SNS'\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }],\n    link: [{\n      rel: 'shortcut icon',\n      href: '/favicon.ico'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css'\n    }]\n  }), __jsx(AppLayout, null, __jsx(Component, pageProps))));\n};\n\nNodeBird.getInitialProps = async context => {\n  const {\n    ctx,\n    Component\n  } = context;\n  let pageProps = {};\n  const state = ctx.store.getState();\n  const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (ctx.isServer && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  if (!state.user.me) {\n    ctx.store.dispatch({\n      type: LOAD_USER_REQUEST\n    });\n  }\n\n  if (Component.getInitialProps) {\n    pageProps = (await Component.getInitialProps(ctx)) || {};\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = true ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(NodeBird));","map":{"version":3,"sources":["/Users/woogler/dev/react-nodebird/front/pages/_app.js"],"names":["React","withRedux","withReduxSaga","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","axios","Helmet","App","Container","AppLayout","reducer","rootSaga","LOAD_USER_REQUEST","NodeBird","Component","store","pageProps","lang","charset","name","content","property","rel","href","getInitialProps","context","ctx","state","getState","cookie","isServer","req","headers","defaults","Cookie","user","me","dispatch","type","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport axios from 'axios';\nimport Helmet from 'react-helmet';\nimport App, { Container } from 'next/app';\n\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\n// class NodeBird extends App {\n//   static getInitialProps(context) {\n//\n//   }\n//   render() {\n//\n//   }\n// }\n\nconst NodeBird = ({ Component, store, pageProps }) => {\n  return (\n    <Container>\n      <Provider store={store}>\n        <Helmet\n          title=\"NodeBird\"\n          htmlAttributes={{ lang: 'ko' }}\n          meta={[{\n            charset: 'UTF-8',\n          }, {\n            name: 'viewport',\n            content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover',\n          }, {\n            'http-equiv': 'X-UA-Compatible', content: 'IE=edge',\n          }, {\n            name: 'description', content: '제로초의 NodeBird SNS',\n          }, {\n            name: 'og:title', content: 'NodeBird',\n          }, {\n            name: 'og:description', content: '제로초의 NodeBird SNS',\n          }, {\n            property: 'og:type', content: 'website',\n          }]}\n          link={[{\n            rel: 'shortcut icon', href: '/favicon.ico',\n          }, {\n            rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css',\n          }, {\n            rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css',\n          }, {\n            rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css',\n          }]}\n        />\n        <AppLayout>\n          <Component {...pageProps} />\n        </AppLayout>\n      </Provider>\n    </Container>\n  );\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired,\n};\n\nNodeBird.getInitialProps = async (context) => {\n  const { ctx, Component } = context;\n  let pageProps = {};\n  const state = ctx.store.getState();\n  const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (ctx.isServer && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  if (!state.user.me) {\n    ctx.store.dispatch({\n      type: LOAD_USER_REQUEST,\n    });\n  }\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx) || {};\n  }\n  return { pageProps };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : compose(\n      applyMiddleware(...middlewares),\n      !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    );\n  const store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(NodeBird));\n"]},"metadata":{},"sourceType":"module"}